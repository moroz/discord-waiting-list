// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: list.sql

package queries

import (
	"context"
)

const countWaiters = `-- name: CountWaiters :one
select count(*) from waiting_list
`

func (q *Queries) CountWaiters(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countWaiters)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const insertWaiter = `-- name: InsertWaiter :one
insert into waiting_list (email, name, bio, region)
values (?, ?, ?, ?) returning id, email, name, bio, region, inserted_at, updated_at
`

type InsertWaiterParams struct {
	Email  string
	Name   string
	Bio    *string
	Region *string
}

func (q *Queries) InsertWaiter(ctx context.Context, arg InsertWaiterParams) (*WaitingList, error) {
	row := q.db.QueryRowContext(ctx, insertWaiter,
		arg.Email,
		arg.Name,
		arg.Bio,
		arg.Region,
	)
	var i WaitingList
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.Bio,
		&i.Region,
		&i.InsertedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
